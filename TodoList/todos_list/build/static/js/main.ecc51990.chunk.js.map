{"version":3,"sources":["List/Todo.js","List/TodoItem.js","List/TodoList.js","List/SearchBox.js","List/Home.js","App.js","serviceWorker.js","index.js"],"names":["Todo","props","className","style","margin","onSubmit","handleSubmit","type","placeholder","value","itemName","onChange","handleChange","editItemLabel","TodoItem","this","title","onClick","editButton","aria-hidden","deleteButton","Component","TodoList","items","map","item","key","id","clearButton","SearchBox","aria-label","searchItem","React","Home","e","setState","target","preventDefault","newItem","state","console","log","date","updatedItem","Date","getTime","editItem","selectedItems","filter","selectedItemForedition","findItems","find","searchItems","bind","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ecc51990.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nconst Todo = (props) => {\r\n    return(\r\n        <div className = \"todo shadow\">\r\n            <div className = \"card card-body my-3\" style = {{borderColor : \"black\"},{margin : \"20px\"}}>\r\n                <form onSubmit = {props.handleSubmit}>\r\n                    <div className = \"input-group\">\r\n                        <div className = \"input-group-prepend\">\r\n                            <div className = \"input-group-text bg-primary text-white\">\r\n                                <i className=\"fa fa-list-alt\"></i>\r\n                            </div>\r\n                        </div>\r\n                        <input  type = \"text\" \r\n                                className = \"form-control shadow\" \r\n                                placeholder = \"Add a Todo Item\" \r\n                                value = {props.itemName}\r\n                                onChange = {props.handleChange}/>\r\n                        <span>\r\n                            <button className = {props.editItemLabel ? \"btn btn-block btn-success\" : \"btn btn-block btn-primary\"}>\r\n                                {props.editItemLabel ? \"Edit Item\" : \"Add Item +\"}\r\n                            </button>\r\n                        </span>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n);    \r\n\r\n}\r\nexport default Todo;","import React, { Component } from 'react'\r\nexport default class TodoItem extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <li className = \"list-group-item d-flex justify-content-around my-2\">\r\n                <h6>{this.props.title}</h6>\r\n                <div className = \"todo-icon\">\r\n                    <span className = \"mx-2 text-success\" onClick = {this.props.editButton}>\r\n                        <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i>\r\n                    </span>\r\n                    <span className = \"mx-2 text-danger\" onClick = {this.props.deleteButton}>\r\n                        <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n                    </span>\r\n                </div>  \r\n            </li>\r\n                \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport TodoItem from './TodoItem'\r\nexport default class TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1><center>List Of Todos</center></h1>\r\n                <ul className=\"list-group\">\r\n                    {\r\n                        this.props.items.map(item => {\r\n                            return (\r\n                                <TodoItem key={item.id}\r\n                                    title={item.itemName}\r\n                                    deleteButton={() => this.props.deleteButton(item.id)}\r\n                                    editButton={() => this.props.editButton(item.id)} />\r\n                            );\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className=\"clear_todo_list\">\r\n                    <button className=\"btn btn-danger btn-block mt-5\" onClick={this.props.clearButton}>\r\n                        Clear List\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../App.css';\r\nclass SearchBox extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"search_box my-5\">\r\n                <div className=\"input-group md-form form-sm form-1 pl-0\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text purple lighten-3\" id=\"basic-text1\">\r\n                            <i className=\"fas fa-search text-white\"\r\n                            aria-hidden=\"true\"/>\r\n                        </span>\r\n                    </div>\r\n                    <input className=\"form-control my-0 py-1\" \r\n                           type=\"text\" \r\n                           placeholder=\"Search\" \r\n                           aria-label=\"Search\"\r\n                           onChange = {this.props.searchItem} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} \r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\nimport TodoList from './TodoList';\r\nimport SearchBox from './SearchBox';\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            id: `${new Date().getTime()}`,\r\n            itemName: '',\r\n            editItem: false,\r\n            searchItems : false\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.clearButton = this.clearButton.bind(this);\r\n        this.deleteButton = this.deleteButton.bind(this);\r\n        this.searchItem = this.searchItem.bind(this);\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            itemName: e.target.value\r\n        });\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newItem = {\r\n            id: this.state.id,\r\n            itemName: this.state.itemName\r\n        };\r\n        console.log(this.state.date)\r\n        const updatedItem = [\r\n            ...this.state.items,\r\n            newItem\r\n        ];\r\n        this.setState({\r\n            items: updatedItem,\r\n            itemName: '',\r\n            id: `${new Date().getTime()}`,\r\n            editItem: false\r\n        });\r\n    }\r\n    clearButton = () => {\r\n        this.setState({\r\n            items: []\r\n        });\r\n    }\r\n    deleteButton = (id) => {\r\n        const selectedItems = this.state.items.filter(\r\n            item => item.id !== id\r\n        );\r\n        this.setState({\r\n            items: selectedItems\r\n        });\r\n    }\r\n    editButton = (id) => {\r\n        const selectedItemForedition = this.state.items.filter(\r\n            item => item.id !== id\r\n        );\r\n        const findItems = this.state.items.find(\r\n            item => item.id === id\r\n        );\r\n        this.setState({\r\n            items: selectedItemForedition,\r\n            editItem: true,\r\n            itemName: findItems.itemName,\r\n            id: findItems.id\r\n        });\r\n    }\r\n    searchItem = (e) => {\r\n\r\n        const searchItem = this.state.items.filter(\r\n            item => item.itemName === e.target.value\r\n        );\r\n        this.setState({\r\n            items : searchItem,\r\n            searchItems : true,\r\n            itemName : searchItem.itemName,\r\n            id : searchItem.id\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-10 mx-auto col-md-8 mt-4 shadow\">\r\n                        <h1>\r\n                            <center>To-Do List</center>\r\n                        </h1>\r\n                    </div>\r\n                    <div className=\"col-10 mx-auto col-md-8 mt-4 shadow\">\r\n                        <Todo itemName={this.state.itemName}\r\n                            handleChange={this.handleChange}\r\n                            handleSubmit={this.handleSubmit}\r\n                            editItemLabel={this.state.editItem} />\r\n                        <SearchBox searchItem = {this.searchItem}/>\r\n                        <div>\r\n                            <TodoList items={this.state.items}\r\n                                clearButton={this.clearButton}\r\n                                deleteButton={this.deleteButton}\r\n                                editButton={this.editButton} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Home;","import React from 'react';\nimport Home from './List/Home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}